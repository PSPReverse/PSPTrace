#!/usr/bin/env python3

# PSPTool - Display, extract and manipulate PSP firmware inside UEFI images
# Copyright (C) 2019 Christian Werling, Robert Buhren
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

from psptool2 import PSPTool
from psptool2.utils import ObligingArgumentParser

from argparse import RawTextHelpFormatter

if __name__ == '__main__':
    # CLI stuff to create a PSPTool object and interact with it
    parser = ObligingArgumentParser(description='Display, extract and manipulate AMD PSP firmware inside BIOS ROMs.\n'
                                                'Note: psptool2 is a rewrite of psptool focussing on usage as a \n'
                                                '      Python package. Please use (legacy) \'psptool\' for advanced CLI'
                                                ' usage.',
                                    formatter_class=RawTextHelpFormatter, add_help=False)

    parser.add_argument('file', help='Binary file to be parsed for PSP firmware (usually 16MB in size)')
    parser.add_argument('-h', '--help', action='help', help='Show this help message and exit.\n\n')
    args = parser.parse_args()

    psp = PSPTool.from_file(args.file)
    psp.ls()
